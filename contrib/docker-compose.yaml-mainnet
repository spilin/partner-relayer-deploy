---
version: '3.8'
services:
  database:
    container_name: mainnet_database
    image: auroraisnear/relayer-database
    build:
      dockerfile: contrib/Dockerfile.database
    restart: unless-stopped
    ports:
      - '127.0.0.1:6432:5432'
    volumes:
      - ./database:/var/lib/postgresql/data
    networks:
      static-network:
        ipv4_address: 10.123.45.253
  endpoint:
    image: auroraisnear/relayer-endpoint
    build:
      dockerfile: contrib/Dockerfile.endpoint
    restart: unless-stopped
    init: true
    depends_on:
      - database
    environment:
      - NEAR_ENV=mainnet
      - NODE_ENV=mainnet
      - WAIT_HOSTS=database:5432
      - WAIT_BEFORE=1
    expose:
      - '8545'
    entrypoint: sh -c "/wait && node lib/index.js"
    networks:
      static-network:
  refiner:
    container_name: "mainnet_refiner"
    image: auroraisnear/relayer-refiner
    build:
      dockerfile: contrib/Dockerfile.refiner
    restart: unless-stopped
    depends_on:
      - indexer
    environment:
      - RUST_BACKTRACE=${RUST_BACKTRACE:-1}
      - WAIT_HOSTS=database:5432
      - WAIT_PATHS=/refiner/borealis-engine-lib/output/refiner/.REFINER_LAST_BLOCK
      - WAIT_BEFORE=1
    volumes:
      - ./output:/refiner/borealis-engine-lib/output # Output directory
      - ./near:/refiner/borealis-engine-lib/nearcore # Path to Nearcore data
    entrypoint: sh -c "/wait && cargo run --release -- -c ./config.json run"
    ports:
      - '127.0.0.1:3030:3030'
    networks:
      static-network:
        ipv4_address: 10.123.45.251
  indexer:
    container_name: mainnet_indexer
    image: auroraisnear/relayer-indexer
    build:
      dockerfile: contrib/Dockerfile.indexer
    restart: unless-stopped
    init: true
    depends_on:
      - database
    environment:
      - WAIT_HOSTS=database:5432
      - WAIT_BEFORE=1
      - NEAR_ENV=mainnet
      - NODE_ENV=mainnet
    volumes:
      - ./output:/refiner/borealis-engine-lib/output/ # Source (refiner output)
    entrypoint: sh -c "/wait && ./indexer"
    networks:
      static-network:
        ipv4_address: 10.123.45.252
  # resilver:
  #   container_name: mainnet_resilver
  #   image: nearaurora/endpoint-mainnet:latest
  #   restart: "no"
  #   init: true
  #   depends_on:
  #     - database
  #     - nearcore
  #   environment:
  #     - NEAR_ENV=mainnet
  #     - NODE_ENV=mainnet
  #   volumes:
  #     - ./config:/srv/aurora/relayer/config
  #   extra_hosts:
  #     - host.docker.internal:host-gateway
  #   entrypoint: ["sh", "-c", "/srv/aurora/relayer/util/update/update.sh"]
  #   networks:
  #     static-network:
  #       ipv4_address: 10.123.45.250
  reverseproxy:
    container_name: reverseproxy
    image: nearaurora/reverseproxy:latest
    restart: unless-stopped
    init: true
    expose:
      - '80'
    ports:
      - '10080:80'  # Remove this line to prevent listening on public IP address.
      # - '127.0.0.1:10080:80' # Remove the hashtag in the beginning of this line to enable listening on 127.0.0.1.
    volumes:
      - ./contrib/nginx/mainnet:/config
    networks:
      static-network:
        ipv4_address: 10.123.45.249
  # watchtower:
  #   container_name: watchtower
  #   restart: unless-stopped
  #   image: containrrr/watchtower
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ./contrib/docker/config.json:/config.json
  #   command: --interval 30
networks:
  static-network:
    ipam:
      config:
         - subnet: 10.123.45.0/24
volumes:
  database:
